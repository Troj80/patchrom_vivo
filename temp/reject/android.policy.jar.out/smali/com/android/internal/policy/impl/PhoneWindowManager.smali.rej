***************
*** 780,785 ****
  
      invoke-direct {p0}, Ljava/lang/Object;-><init>()V
  
      new-instance v0, Ljava/lang/Object;
  
      invoke-direct {v0}, Ljava/lang/Object;-><init>()V
--- 784,795 ----
  
      invoke-direct {p0}, Ljava/lang/Object;-><init>()V
  
+     new-instance v0, Landroid/os/Binder;
+ 
+     invoke-direct {v0}, Landroid/os/Binder;-><init>()V
+ 
+     iput-object v0, p0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mStatusBarDisableToken:Landroid/os/IBinder;
+ 
      new-instance v0, Ljava/lang/Object;
  
      invoke-direct {v0}, Ljava/lang/Object;-><init>()V
***************
*** 3474,3482 ****
      xor-int v0, v3, v6
  
      .local v0, diff:I
!     iget-object v6, p0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;
  
!     invoke-interface {v4, v6}, Landroid/view/WindowManagerPolicy$WindowState;->getNeedsMenuLw(Landroid/view/WindowManagerPolicy$WindowState;)Z
  
      move-result v1
  
--- 3484,3494 ----
      xor-int v0, v3, v6
  
      .local v0, diff:I
!     iget-object v6, p0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;
! 
!     iget-object v7, p0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;
  
!     invoke-static {v6, v7}, Lcom/android/internal/policy/impl/PhoneWindowManager$Injector;->getNeedsMenuLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)Z
  
      move-result v1
  
***************
*** 4509,4514 ****
  
      .end local v0           #applyWindow:Z
      :cond_a
      return-void
  
      :cond_b
--- 4521,4528 ----
  
      .end local v0           #applyWindow:Z
      :cond_a
+     invoke-static {p0, p1, p2}, Lcom/android/internal/policy/impl/PhoneWindowManager$Injector;->setAboveStatusBarFullScreenWindow(Lcom/android/internal/policy/impl/PhoneWindowManager;Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)V
+ 
      return-void
  
      :cond_b
***************
*** 5509,5528 ****
  
      if-nez v2, :cond_7
  
-     move-object/from16 v0, p0
- 
-     iget v2, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mUnrestrictedScreenTop:I
- 
-     move-object/from16 v0, p0
- 
-     iget v3, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mStatusBarHeight:I
- 
-     add-int/2addr v2, v3
- 
-     move-object/from16 v0, p0
- 
-     iput v2, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mSystemTop:I
- 
      :cond_7
      move-object/from16 v0, p0
  
--- 5523,5528 ----
  
      if-nez v2, :cond_7
  
      :cond_7
      move-object/from16 v0, p0
  
***************
*** 11068,11077 ****
  
      move-result v6
  
!     if-eqz v6, :cond_3
  
      or-int/lit8 v0, v0, 0x1
  
      goto :goto_2
  
      :cond_f
--- 11083,11095 ----
  
      move-result v6
  
!     if-eqz v6, :cond_miui_0
  
      or-int/lit8 v0, v0, 0x1
  
+     :cond_miui_0
+     invoke-virtual {p0, v5}, Lcom/android/internal/policy/impl/PhoneWindowManager;->notifyStatusBarShowingOrHiding(Z)V
+ 
      goto :goto_2
  
      :cond_f
***************
*** 11081,11090 ****
  
      move-result v6
  
!     if-eqz v6, :cond_3
  
      or-int/lit8 v0, v0, 0x1
  
      goto/16 :goto_2
  
      :cond_10
--- 11099,11111 ----
  
      move-result v6
  
!     if-eqz v6, :cond_miui_1
  
      or-int/lit8 v0, v0, 0x1
  
+     :cond_miui_1
+     invoke-virtual {p0, v4}, Lcom/android/internal/policy/impl/PhoneWindowManager;->notifyStatusBarShowingOrHiding(Z)V
+ 
      goto/16 :goto_2
  
      :cond_10
***************
*** 13041,13046 ****
  
      if-eqz v3, :cond_6
  
      const-string v3, "WindowManager"
  
      const-string v5, "Ignoring HOME; there\'s a ringing incoming call."
--- 13098,13113 ----
  
      if-eqz v3, :cond_6
  
+     move-object/from16 v0, p0
+ 
+     iget-object v3, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mContext:Landroid/content/Context;
+ 
+     invoke-static {v3}, Lcom/android/internal/policy/impl/PhoneWindowManager$Injector;->isInCallScreenShowing(Landroid/content/Context;)Z
+ 
+     move-result v3
+ 
+     if-eqz v3, :cond_6
+ 
      const-string v3, "WindowManager"
  
      const-string v5, "Ignoring HOME; there\'s a ringing incoming call."
***************
*** 14327,14333 ****
  
      .local v6, isWakeKey:Z
      :goto_4
!     if-eqz v2, :cond_3
  
      move/from16 v0, p2
  
--- 14394,14400 ----
  
      .local v6, isWakeKey:Z
      :goto_4
!     invoke-static/range {p0 .. p2}, Lcom/android/internal/policy/impl/PhoneWindowManager$Injector;->performReleaseHapticFeedback(Lcom/android/internal/policy/impl/PhoneWindowManager;Landroid/view/KeyEvent;I)V
  
      move/from16 v0, p2
  
***************
*** 23226,23244 ****
      .locals 5
  
      .prologue
!     iget-object v1, p0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mGlobalActions:Lcom/android/internal/policy/impl/GlobalActions;
  
      if-nez v1, :cond_0
  
!     new-instance v1, Lcom/android/internal/policy/impl/GlobalActions;
  
      iget-object v2, p0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mContext:Landroid/content/Context;
  
      iget-object v3, p0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;
  
!     invoke-direct {v1, v2, v3}, Lcom/android/internal/policy/impl/GlobalActions;-><init>(Landroid/content/Context;Landroid/view/WindowManagerPolicy$WindowManagerFuncs;)V
  
!     iput-object v1, p0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mGlobalActions:Lcom/android/internal/policy/impl/GlobalActions;
  
      :cond_0
      invoke-direct {p0}, Lcom/android/internal/policy/impl/PhoneWindowManager;->keyguardIsShowingTq()Z
--- 23400,23418 ----
      .locals 5
  
      .prologue
!     iget-object v1, p0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mGlobalActions:Lcom/android/internal/policy/impl/MiuiGlobalActions;
  
      if-nez v1, :cond_0
  
!     new-instance v1, Lcom/android/internal/policy/impl/MiuiGlobalActions;
  
      iget-object v2, p0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mContext:Landroid/content/Context;
  
      iget-object v3, p0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;
  
!     invoke-direct {v1, v2, v3}, Lcom/android/internal/policy/impl/MiuiGlobalActions;-><init>(Landroid/content/Context;Landroid/view/WindowManagerPolicy$WindowManagerFuncs;)V
  
!     iput-object v1, p0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mGlobalActions:Lcom/android/internal/policy/impl/MiuiGlobalActions;
  
      :cond_0
      invoke-direct {p0}, Lcom/android/internal/policy/impl/PhoneWindowManager;->keyguardIsShowingTq()Z
***************
*** 23246,23258 ****
      move-result v0
  
      .local v0, keyguardShowing:Z
!     iget-object v1, p0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mGlobalActions:Lcom/android/internal/policy/impl/GlobalActions;
  
      invoke-virtual {p0}, Lcom/android/internal/policy/impl/PhoneWindowManager;->isDeviceProvisioned()Z
  
      move-result v2
  
!     invoke-virtual {v1, v0, v2}, Lcom/android/internal/policy/impl/GlobalActions;->showDialog(ZZ)V
  
      if-eqz v0, :cond_1
  
--- 23420,23432 ----
      move-result v0
  
      .local v0, keyguardShowing:Z
!     iget-object v1, p0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mGlobalActions:Lcom/android/internal/policy/impl/MiuiGlobalActions;
  
      invoke-virtual {p0}, Lcom/android/internal/policy/impl/PhoneWindowManager;->isDeviceProvisioned()Z
  
      move-result v2
  
!     invoke-virtual {v1, v0, v2}, Lcom/android/internal/policy/impl/MiuiGlobalActions;->showDialog(ZZ)V
  
      if-eqz v0, :cond_1
  
